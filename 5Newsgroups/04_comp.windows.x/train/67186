from: whalei@sigma.kpc.com (ken whalei)
subject: re: anim with xputimag()?
in-repli-to: dcr@mail.ast.cam.ac.uk's messag of thu, 22 apr 1993 09:28:30 gmt
organ: kubota pacif comput inc.
	<1993apr22.092830.2190@infodev.cam.ac.uk>
line: 38

| 
| share memori putimag (also mention by nkisseb@delphi.beckman.uiuc.edu,
| nick kisseberth) look interest, but i need someon to point me to some
| document. is thi method like to give better result than server-
| resid pixmap? i'd also be interest in look at the xview code
| mention abov...

there is no easi answer to thi question: it depend on whether the displai
devic can hold pixmap in off-screen memori, and if so, how effici
the server manag these resourc (have to deal with limit off-screen
memori is the bane of the server implementor's exist!).  

i have work with graphic devic where the off-screen memori to 
main displai copi rate eclips that of the main memori to displai copi
rate, and with those where the main memori to displai is *faster* than
off-screen to displai (requir onli a write to the framebuff rather
than a read of the f.b. follow by a write)

if your server us the cfb code or someth like it to render into
pixmap in cpu main memori, the rate you can get through mit-shm ar
like to be equal (mayb a tad slower, depend on your os's implement
of share memori) to copyarea from pixmap to window, which is also then
just a copi from cpu main memori to graphic devic.

on advanag of mit-shm is that if your imag ar larg, you don't end up
grow the size of the server process to hold them.

on disadvantag of the mit-shm is that, in it sampl implement,
there is no provis for elegantli clean up the share memori segment
if the client di a sudden, violent death (e.g., "kill").  you have to 
be mind of clutter up the system with zombi share memori segment.

	ken
--
kenneth whalei			 (408) 748-6347
kubota pacif comput, inc.	 email: whalei@kpc.com
2630 walsh avenu
santa clara, ca.  95051
