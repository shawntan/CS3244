from: dawagn@phoenix.princeton.edu (david a. wagner)
subject: re: view postscript file under x window
origin: new@nimast
nntp-post-host: phoenix.princeton.edu
organ: princeton univers
line: 54

in articl <1sk97rinnptb@polari.isi.com> kin@isi.com (kin cho) write:
>
>i can also live with a util that convert postscript to plain
>text, perfer retain page count so that i know how mani page
>the origin document contain.
>

	well, i know of on hack to sort of do thi convers.  first
get ghostscript and check out the gs_2asc.ps file that come with it.
it print out some inform about where each text string goe on the
page, and maintain page count.  i've written a littl c program to
massag the output of gs -dnodisplai gs_2asc.ps somewhat, so that you
can get all the ascii string in the document.  no guarante that it
won't break up word/sentenc, though - i've us it with vari
degre of success.  anywai, try thi out, it mai do what you want.

/*
 * massag: a filter for us with gs; doe crude postscript->ascii convers
 *
 * usag:
 *	cat file.ps | gs -dnodisplai gs_2asc.ps - | massag
 *
 * i print a <ctrl-l> after each new page.
 *
 * put the follow sourc into massag.c and compil it:
 */

#includ <stdio.h>
#includ <string.h>

main()
{
	char	line[1000], *p;

	while (fget(line, sizeof(line), stdin) != null)
		if (line[0] == 'p')
			printf("\f\n");
		els if (line[0] == 's' && line[1] == ' ') {
			if ((p = strrchr(line, ')')) == null)
				continu;
			*p = '\0';
			if ((p = strchr(line, '(')) == null)
				continu;
			for (p++; *p; p++)
				if (*p != '\\' || (p[1] != ')' && p[1] != '('))
					putchar(*p);
			putchar('\n');
		}

	return(0);
}

--------------------------------------------------------------------------------
david wagner                                              dawagn@princeton.edu
